//UVA 11481
#include <iostream>
#include <cstdio>
#include <algorithm>

using namespace std;
const long long MOD=1000000007;
long long D[1100];
long long inv[1100];
long long f[1100];
long long finv[1100];
long long C(int n,int r) {
	if(!r) return 1;
    long long res=f[n];
    res=(res*finv[r])%MOD;
    res=(res*finv[n-r])%MOD;
    return res;
}
int main() {
    D[1]=0,D[2]=1;
    for(int i=3;i<=1004;i++) {
        D[i]=(i-1)*(D[i-1]+D[i-2])%MOD;
    }
	f[0]=1;
    inv[1]=1;
    finv[0]=1;
    for(int i=2;i<=1005;i++) inv[i]=(MOD-MOD/i)*inv[MOD%i]%MOD;
    for(int i=1;i<=1005;i++) {
        f[i]=f[i-1]*i%MOD;
        finv[i]=finv[i-1]*inv[i]%MOD;
    }
    int t,n,m,k;
	int kase=1;
    cin>>t;
    while(t--) {
        cin>>n>>m>>k;
        long long res=0;
		for(int i=0;i<=n-m;i++) {
			res=(res+D[n-k-i]*C(n-m,i))%MOD;
		}
		res=res*C(m,k)%MOD;
		if(m==k) res=(res+1)%MOD;
		cout<<"Case "<<kase++<<": ";
        cout<<res<<endl;
    }
    return 0;
}
