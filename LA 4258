//LA 4258
#include <iostream>
#include <algorithm>
#include <cstring>
using namespace std;
struct p {
	double x,y;
	bool operator <(const p& rhs) const {
		return x<rhs.x;
	}
}P[55];
long long dp[55][55];
double cross(int i,int j,int k) {
	double a=P[j].x-P[i].x;
	double b=P[j].y-P[i].y;
	double c=P[k].x-P[i].x;
	double d=P[k].y-P[i].y;
	return a*d-b*c;
}
bool check(int s,int t,int val) {
	for(int i=s+1;i<t;i++) {
		if(cross(s,i,t)*val<=0) return false;
	}
	return true;
}
int main() {
	int t;
	cin>>t;
	while(t--) {
		int n;
		cin>>n;
		for(int i=0;i<n;i++) {
			cin>>P[i].x>>P[i].y;
		}
		sort(P,P+n);
		memset(dp,0,sizeof(dp));
		dp[0][1]=dp[1][0]=1;
		for(int i=2;i<n;i++) {
			for(int j=0;j<i-1;j++) {
				dp[i][j]+=dp[i-1][j];
				dp[j][i]+=dp[j][i-1];
			}
			for(int j=0;j<i-1;j++) {
				if(check(j,i,1)) dp[i][i-1]+=dp[j][i-1];
				if(check(j,i,-1)) dp[i-1][i]+=dp[i-1][j];
			}
		}
		long long ans=0;
		for(int i=0;i<n-1;i++) {
			if(check(i,n-1,1)) ans+=dp[i][n-1];
			if(check(i,n-1,-1)) ans+=dp[n-1][i];
		}
		cout<<ans/2<<endl;
	}
	return 0;
}
